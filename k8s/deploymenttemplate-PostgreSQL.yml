apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels: {app: bexhoma, component: sut, configuration: default, experiment: default}
  name: bexhoma-storage
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
  storageClassName: shared
---
apiVersion: v1
kind: Service
metadata:
  labels: {app: bexhoma, component: sut, configuration: default, experiment: default}
  name: bexhoma-service
spec:
  ports:
  - {port: 9091, protocol: TCP, name: port-dbms, targetPort: 5432}
  - {port: 9300, protocol: TCP, name: port-monitoring, targetPort: 9300}
  - {port: 9500, protocol: TCP, name: port-monitoring-application, targetPort: 9187}
  selector: {app: bexhoma, component: sut, configuration: default, experiment: default}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels: {app: bexhoma, component: sut, configuration: default, experiment: default}
  name: bexhoma-deployment-postgres
spec:
  replicas: 1
  selector:
    matchLabels: {app: bexhoma, component: sut, configuration: default, experiment: default}
  template:
    metadata:
      labels: {app: bexhoma, component: sut, configuration: default, experiment: default}
    spec:
      automountServiceAccountToken: false
      imagePullSecrets:
      - {name: dockerhub}
      nodeSelector:
      tolerations:
      #- key: "nvidia.com/gpu"
      #  effect: "NoSchedule"
      terminationGracePeriodSeconds: 180
      containers:
      - name: dbms
        image: postgres:17.5
        #image: postgres:18beta1-alpine
        #image: postgres:16.9
        env:
        - name: POSTGRES_HOST_AUTH_METHOD
          value: trust
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        # pg_ctl: cannot be run as root
        lifecycle:
          postStart:
            exec:
              command: ["/bin/sh", "-c", "echo 'Hello from the postStart handler' > /usr/share/message && cat /usr/share/message"]
          preStop:
            exec:
              #command: ["/bin/sh", "-c", "gosu postgres pg_ctl stop -D /var/lib/postgresql/data -m fast"]
              #command: ["/bin/sh", "-c", "gosu postgres pg_ctl stop -m fast"]
              #command: ["echo 'PRESTOP' ;", "/bin/sh", "-c", "gosu postgres pg_ctl stop -m smart -t 120"]
              #command: ["/bin/sh", "-c", "echo 'Hello from the preStop handler'; gosu postgres pg_ctl stop -m smart -t 120"]
              #command: ["gosu postgres", "pg_ctl stop -m smart -t 120"]
              #command: ["/bin/sh", "-c"]
              #args: ["gosu postgres pg_ctl stop -m smart -t 120"]
              #command: ["/bin/sh", "-c", "gosu postgres 'pg_ctl stop -m smart -t 120'"]
              #command: ["/bin/sh", "-c", "gosu postgres '/usr/lib/postgresql/16/bin/pg_ctl stop -m smart -t 120'"]
              #command: ["/bin/sh -c 'gosu postgres /usr/lib/postgresql/16/bin/pg_ctl stop -m smart -t 120'"]
              command: ["/bin/sh", "-c", "gosu postgres /usr/lib/postgresql/16/bin/pg_ctl stop -m smart -t 120"]
              #command: ["/bin/sh", "-c", "echo 'Hello from the preStop handler' > /usr/share/message && cat /usr/share/message"]
        #command: ["sh", "-c", "trap 'gosu postgres pg_ctl stop -m smart' SIGTERM; gosu postgres postgres"] # trap: SIGTERM: bad trap
        readinessProbe:
          exec:
            command:
              - /bin/sh
              - "-c"
              - >
                if pg_isready -h localhost -p 5432 -U postgres > /dev/null; then
                  recovery_status=$(psql -h localhost -p 5432 -U postgres -t -c "SELECT pg_is_in_recovery();" | xargs);
                  [ "$recovery_status" = "f" ] && exit 0 || exit 1;
                else
                  exit 1;
                fi
            #command:
            #- pg_isready
            #- -U
            #- postgres
          initialDelaySeconds: 15
          periodSeconds: 60
          successThreshold: 3
        ports:
        - {containerPort: 5432}
        securityContext:
          allowPrivilegeEscalation: false
          #runAsNonRoot: true
          #runAsUser: 1000
          #runAsGroup: 1000
          #capabilities:
          #  drop:
          #    - ALL
          #readOnlyRootFilesystem: true #could not create lock file "/var/run/postgresql/.s.PGSQL.5432.lock": Read-only file system
        resources:
          limits: {cpu: 16000m, memory: 128Gi}
          requests: {cpu: 1000m, memory: 1Gi}
          #, ephemeral-storage: "1536Gi"}
        volumeMounts:
        - {mountPath: /data, name: benchmark-data-volume}
        - {mountPath: /dev/shm, name: dshm}
        - {mountPath: /var/lib/postgresql/data, name: benchmark-storage-volume}
        args:
          # --- Connection & Worker Processes ---
          - "-c"
          - "max_connections=1500"       # https://www.postgresql.org/docs/current/runtime-config-connection.html#GUC-MAX-CONNECTIONS
          - "-c"
          - "max_worker_processes=128"   # https://www.postgresql.org/docs/current/runtime-config-resource.html#GUC-MAX-WORKER-PROCESSES
          - "-c"
          - "max_parallel_workers=64"    # https://www.postgresql.org/docs/current/runtime-config-resource.html#GUC-MAX-PARALLEL-WORKERS
          - "-c"
          - "max_parallel_workers_per_gather=8"  # https://www.postgresql.org/docs/current/runtime-config-resource.html#GUC-MAX-PARALLEL-WORKERS-PER-GATHER
          - "-c"
          - "max_parallel_maintenance_workers=8" # https://www.postgresql.org/docs/current/runtime-config-resource.html#GUC-MAX-PARALLEL-MAINTENANCE-WORKERS

          # --- Memory Settings ---
          - "-c"
          - "shared_buffers=256GB"       # https://www.postgresql.org/docs/current/runtime-config-resource.html#GUC-SHARED-BUFFERS
          - "-c"
          - "effective_cache_size=350GB" # https://www.postgresql.org/docs/current/runtime-config-query.html#GUC-EFFECTIVE-CACHE-SIZE
          - "-c"
          - "work_mem=128MB"             # https://www.postgresql.org/docs/current/runtime-config-resource.html#GUC-WORK-MEM
          - "-c"
          - "maintenance_work_mem=4GB"   # https://www.postgresql.org/docs/current/runtime-config-resource.html#GUC-MAINTENANCE-WORK-MEM
          - "-c"
          - "temp_buffers=64MB"          # https://www.postgresql.org/docs/current/runtime-config-resource.html#GUC-TEMP-BUFFERS
          - "-c"
          - "wal_buffers=16MB"           # https://www.postgresql.org/docs/current/runtime-config-wal.html#GUC-WAL-BUFFERS
          - "-c"
          - "autovacuum_work_mem=1GB"    # https://www.postgresql.org/docs/current/runtime-config-autovacuum.html#GUC-AUTOVACUUM-WORK-MEM

          # --- Autovacuum ---
          - "-c"
          - "autovacuum=on"                           # https://www.postgresql.org/docs/current/runtime-config-autovacuum.html#GUC-AUTOVACUUM
          - "-c"
          - "autovacuum_max_workers=10"               # https://www.postgresql.org/docs/current/runtime-config-autovacuum.html#GUC-AUTOVACUUM-MAX-WORKERS
          - "-c"
          - "autovacuum_vacuum_cost_limit=1000"       # https://www.postgresql.org/docs/current/runtime-config-autovacuum.html#GUC-AUTOVACUUM-VACUUM-COST-LIMIT
          - "-c"
          - "vacuum_cost_limit=1000"                  # https://www.postgresql.org/docs/current/runtime-config-resource.html#GUC-VACUUM-COST-LIMIT
          - "-c"
          - "autovacuum_naptime=15s"                  # https://www.postgresql.org/docs/current/runtime-config-autovacuum.html#GUC-AUTOVACUUM-NAPTIME
          - "-c"
          - "autovacuum_vacuum_cost_delay=20ms"       # https://www.postgresql.org/docs/current/runtime-config-autovacuum.html#GUC-AUTOVACUUM-VACUUM-COST-DELAY

          # --- WAL & Checkpoints (Ceph-optimized) ---
          - "-c"
          - "wal_level=replica"                       # https://www.postgresql.org/docs/current/runtime-config-wal.html#GUC-WAL-LEVEL
          - "-c"
          - "wal_compression=on"                      # https://www.postgresql.org/docs/current/runtime-config-wal.html#GUC-WAL-COMPRESSION
          - "-c"
          - "wal_writer_delay=500ms"                  # https://www.postgresql.org/docs/current/runtime-config-wal.html#GUC-WAL-WRITER-DELAY
          - "-c"
          - "commit_delay=10000"                      # https://www.postgresql.org/docs/current/runtime-config-wal.html#GUC-COMMIT-DELAY
          - "-c"
          - "synchronous_commit=off"                  # https://www.postgresql.org/docs/current/runtime-config-wal.html#GUC-SYNCHRONOUS-COMMIT
          - "-c"
          - "max_wal_size=2GB"                        # https://www.postgresql.org/docs/current/runtime-config-wal.html#GUC-MAX-WAL-SIZE
          - "-c"
          - "min_wal_size=1GB"                        # https://www.postgresql.org/docs/current/runtime-config-wal.html#GUC-MIN-WAL-SIZE
          - "-c"
          - "checkpoint_timeout=5min"                 # https://www.postgresql.org/docs/current/runtime-config-wal.html#GUC-CHECKPOINT-TIMEOUT
          - "-c"
          - "checkpoint_completion_target=0.9"        # https://www.postgresql.org/docs/current/runtime-config-wal.html#GUC-CHECKPOINT-COMPLETION-TARGET

          # --- Planner Cost Tweaks (CephFS) ---
          - "-c"
          - "random_page_cost=4.0"                    # https://www.postgresql.org/docs/current/runtime-config-query.html#GUC-RANDOM-PAGE-COST
          - "-c"
          - "seq_page_cost=1.5"                       # https://www.postgresql.org/docs/current/runtime-config-query.html#GUC-SEQ-PAGE-COST
          - "-c"
          - "cpu_tuple_cost=0.01"                     # https://www.postgresql.org/docs/current/runtime-config-query.html#GUC-CPU-TUPLE-COST
          - "-c"
          - "effective_io_concurrency=2"              # https://www.postgresql.org/docs/current/runtime-config-resource.html#GUC-EFFECTIVE-IO-CONCURRENCY
          - "-c"
          - "default_statistics_target=500"           # https://www.postgresql.org/docs/current/runtime-config-query.html#GUC-DEFAULT-STATISTICS-TARGET

          # --- Locks and Limits ---
          - "-c"
          - "max_locks_per_transaction=128"           # https://www.postgresql.org/docs/current/runtime-config-locks.html#GUC-MAX-LOCKS-PER-TRANSACTION
          - "-c"
          - "max_pred_locks_per_transaction=128"      # https://www.postgresql.org/docs/current/runtime-config-locks.html#GUC-MAX-PRED-LOCKS-PER-TRANSACTION
          - "-c"
          - "max_stack_depth=7MB"                     # https://www.postgresql.org/docs/current/runtime-config-resource.html#GUC-MAX-STACK-DEPTH
          - "-c"
          - "max_files_per_process=4000"              # https://www.postgresql.org/docs/current/runtime-config-resource.html#GUC-MAX-FILES-PER-PROCESS

          # --- Miscellaneous ---
          - "-c"
          - "huge_pages=try"                          # https://www.postgresql.org/docs/current/runtime-config-resource.html#GUC-HUGE-PAGES
      - name: monitor-application
        image: quay.io/prometheuscommunity/postgres-exporter:v0.17.1 #v0.15.0
        command: ["postgres_exporter"] #, "--auto-discover-databases"]
        env:
          - name: DATA_SOURCE_URI
            value: "localhost:5432/?sslmode=disable"
          - name: DATA_SOURCE_USER
            value: "postgres"
          - name: DATA_SOURCE_PASS
            value: ""
          #- name: PG_EXPORTER_AUTO_DISCOVER_DATABASES
          #  value: "true"
          #- name: DATA_SOURCE_URI
          #  value: "postgresql://user:password@/postgres?host=/var/run/postgresql"
        ports:
          - containerPort: 9187
        resources:
          requests: {cpu: 1000m, memory: 4Gi}
          limits: {cpu: 1000m, memory: 4Gi}
      volumes:
      - name: benchmark-data-volume
        persistentVolumeClaim: {claimName: bexhoma-data}
      - name: benchmark-storage-volume
        persistentVolumeClaim: {claimName: bexhoma-storage}
      - name: rootfs
        hostPath:
          path: /
      - name: var-run
        hostPath:
          path: /var/run
      - name: sys
        hostPath:
          path: /sys
      - name: docker
        hostPath:
          path: /var/lib/docker
      - name: disk
        hostPath:
          path: /dev/disk
      - name: dshm
        emptyDir:
          medium: Memory
