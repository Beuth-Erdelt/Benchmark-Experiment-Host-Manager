apiVersion: v1
kind: Service
metadata:
  labels: {app: bexhoma, component: sut, configuration: default, experiment: default}
  name: bexhoma-service
spec:
  ports:
  - {port: 9091, protocol: TCP, name: port-dbms, targetPort: 5432}
  - {port: 9300, protocol: TCP, name: port-monitoring, targetPort: 9300}
  selector: {app: bexhoma, component: sut, configuration: default, experiment: default}
  #clusterIP: None
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels: {app: bexhoma, component: sut, configuration: default, experiment: default}
  name: bexhoma-deployment-citus
spec:
  replicas: 1
  selector:
    matchLabels: {app: bexhoma, component: sut, configuration: default, experiment: default}
  template:
    metadata:
      labels: {app: bexhoma, component: sut, configuration: default, experiment: default}
    spec:
      automountServiceAccountToken: false
      imagePullSecrets:
      - {name: dockerhub}
      nodeSelector:
      tolerations:
      - key: "nvidia.com/gpu"
        effect: "NoSchedule"
      containers:
      - name: dbms
        image: citusdata/citus:pg12
        env:
        - name: POSTGRES_HOST_AUTH_METHOD
          value: trust
        ports:
        - {containerPort: 5432}
        resources:
          limits: {cpu: 16000m, memory: 128Gi}
          requests: {cpu: 16000m, memory: 128Gi}
        volumeMounts:
        - {mountPath: /data, name: benchmark-data-volume}
        - {mountPath: /dev/shm, name: dshm}
        livenessProbe:
          exec:
            command:
            - ./pg_healthcheck
          initialDelaySeconds: 60
      - name: cadvisor
        #image: k8s.gcr.io/cadvisor:v0.30.2
        image: gcr.io/cadvisor/cadvisor:v0.36.0
        args: ["--port", "9300", "--storage_duration", "20m0s", "--docker_only", "true", "--disable_metrics", "disk,network,tcp,advtcp,udp,sched,process,hugetlb", "--application_metrics_count_limit", "30", "--housekeeping_interval", "5s"]
        ports:
        - containerPort: 9300
          hostPort: 9300
          name: http
          protocol: TCP
        resources:
          requests:
            cpu: 150m
            memory: 200Mi
        volumeMounts:
        - mountPath: /rootfs
          name: rootfs
          readOnly: true
        - mountPath: /var/run
          name: var-run
          readOnly: true
        - mountPath: /sys
          name: sys
          readOnly: true
        - mountPath: /var/lib/docker
          name: docker
          readOnly: true
        - mountPath: /dev/disk
          name: disk
          readOnly: true
      volumes:
      - name: benchmark-data-volume
        persistentVolumeClaim: {claimName: bexhoma-data}
      - hostPath:
          path: /
        name: rootfs
      - hostPath:
          path: /var/run
        name: var-run
      - hostPath:
          path: /sys
        name: sys
      - hostPath:
          path: /var/lib/docker
        name: docker
      - hostPath:
          path: /dev/disk
        name: disk
      - name: proc
        hostPath:
          path: /proc
      - emptyDir:
          medium: Memory
        name: dshm
---
apiVersion: v1
kind: Service
metadata:
  name: bexhoma-workers
  labels: {app: bexhoma, component: worker, configuration: default, experiment: default}
spec:
  selector:
    {app: bexhoma, component: worker, configuration: default, experiment: default}
  clusterIP: None
  ports:
  - port: 5432
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: bexhoma-worker
  labels: {app: bexhoma, component: worker, configuration: default, experiment: default}
spec:
  selector:
    matchLabels:
      {app: bexhoma, component: worker, configuration: default, experiment: default}
  serviceName: bexhoma-workers
  replicas: 6
  template:
    metadata:
      labels: {app: bexhoma, component: worker, configuration: default, experiment: default}
    spec:
      nodeSelector:
        #cpu: epyc-7742
      tolerations:
      - key: "nvidia.com/gpu"
        effect: "NoSchedule"
      containers:
      - name: citus-worker
        image: citusdata/citus:pg12
        env:
        - name: PGPASSWORD
          valueFrom:
            secretKeyRef:
              name: citus-secrets
              key: password
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: citus-secrets
              key: password
        #lifecycle:
        #  postStart:
        #    exec:
        #      command: 
        #      - /bin/sh
        #      - -c
        #      #- if [ ${POD_IP} ]; then sleep 10 ; echo '${HOSTNAME}.citus-workers' ; fi
        #      - if [ ${POD_IP} ]; then {sleep 180 ; psql --host=bexhoma-service --port 9091 --username=postgres --command="SELECT * from master_add_node('${HOSTNAME}.citus-workers', 5432);" }& fi
        ports:
        - containerPort: 5432
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: POSTGRES_HOST_AUTH_METHOD
          value: trust
        livenessProbe:
          exec:
            command:
            - ./pg_healthcheck
          initialDelaySeconds: 60
