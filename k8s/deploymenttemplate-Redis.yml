apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels: {app: bexhoma, component: sut, configuration: default, experiment: default}
  name: bexhoma-storage
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
  storageClassName: shared
---
apiVersion: v1
kind: Service
metadata:
  labels: {app: bexhoma, component: sut, configuration: default, experiment: default}
  name: bexhoma-service
spec:
  ports:
  - {port: 9091, protocol: TCP, name: port-dbms, targetPort: 6379}
  - {port: 9300, protocol: TCP, name: port-monitoring, targetPort: 9300}
  selector: {app: bexhoma, component: sut, configuration: default, experiment: default}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels: {app: bexhoma, component: sut, configuration: default, experiment: default}
  name: bexhoma-deployment-redis
spec:
  replicas: 1
  selector:
    matchLabels: {app: bexhoma, component: sut, configuration: default, experiment: default}
  template:
    metadata:
      labels: {app: bexhoma, component: sut, configuration: default, experiment: default}
    spec:
      automountServiceAccountToken: false
      imagePullSecrets:
      - {name: dockerhub}
      nodeSelector:
      tolerations:
      - key: "nvidia.com/gpu"
        effect: "NoSchedule"
      terminationGracePeriodSeconds: 180
      containers:
      - name: dbms
        image: redis:7.4.2
        args: ["--maxclients", "10000", "--io-threads", "64"]
        env:
          - name: MASTER
            value: "true"
        ports:
          - containerPort: 6379
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - "redis-cli ping | grep PONG"
          initialDelaySeconds: 5
          periodSeconds: 5
        livenessProbe:
          tcpSocket:
            port: 6379
          initialDelaySeconds: 10
          periodSeconds: 10
        lifecycle:
          preStop:
            exec:
              command: ["redis-cli", "shutdown", "save"]
        securityContext:
          allowPrivilegeEscalation: false
          #runAsNonRoot: true
          #runAsUser: 1000
          #runAsGroup: 1000
          #capabilities:
          #  drop:
          #    - ALL
          readOnlyRootFilesystem: false
        resources:
          limits: {cpu: 16000m, memory: 128Gi}
          requests: {cpu: 1000m, memory: 1Gi}
          #, ephemeral-storage: "1536Gi"}
        volumeMounts:
        #- {mountPath: /data, name: benchmark-data-volume}
        - {mountPath: /data, name: benchmark-storage-volume}
      - name: cadvisor
        image: gcr.io/cadvisor/cadvisor:v0.47.0
        args: ["--port", "9300", "--storage_duration", "20m0s", "--docker_only", "true", "--disable_metrics", "disk,network,tcp,advtcp,udp,sched,process,hugetlb", "--application_metrics_count_limit", "30", "--housekeeping_interval", "5s"]
        ports:
        - containerPort: 9300
          #hostPort: 9300
          name: http
          protocol: TCP
        securityContext:
          allowPrivilegeEscalation: false
          #runAsNonRoot: true
          #runAsUser: 1000
          #runAsGroup: 1000
          #capabilities:
          #  drop:
          #    - ALL
          readOnlyRootFilesystem: true
        resources:
          requests: {cpu: 150m, memory: 200Mi}
          limits: {cpu: 16000m, memory: 128Gi}
        volumeMounts:
        - name: rootfs
          mountPath: /rootfs
          readOnly: true
        - name: var-run
          mountPath: /var/run
          readOnly: true
        - name: sys
          mountPath: /sys
          readOnly: true
        - name: docker
          mountPath: /var/lib/docker
          readOnly: true
        - name: disk
          mountPath: /dev/disk
          readOnly: true
      volumes:
      - name: benchmark-data-volume
        persistentVolumeClaim: {claimName: bexhoma-data}
      - name: benchmark-storage-volume
        persistentVolumeClaim: {claimName: bexhoma-storage}
      - name: rootfs
        hostPath:
          path: /
      - name: var-run
        hostPath:
          path: /var/run
      - name: sys
        hostPath:
          path: /sys
      - name: docker
        hostPath:
          path: /var/lib/docker
      - name: disk
        hostPath:
          path: /dev/disk
      - name: dshm
        emptyDir:
          medium: Memory
